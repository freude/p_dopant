include "mesh_gen.idp"

verbosity = 0;

//--------------------------------------------------------------------------
//--------------------------------------------------------------------------
//--------------------------------------------------------------------------

int nev = 10;
real sigma = -10;

int jj;
real alpha,gamma1,gamma2,gamma3;
string fl, fl1, pth;

jj=atoi(ARGV[2]);
alpha=atof(ARGV[3]);
gamma1=atof(ARGV[4]);
gamma2=atof(ARGV[5]);
gamma3=atof(ARGV[6]);
pth=ARGV[7];

if (gamma1!=1.0)
fl=pth+"/pot1.txt";
if (gamma2!=1.0)
fl=pth+"/pot2.txt";
if (gamma3!=1.0)
fl=pth+"/pot3.txt";

//gamma1=1;
//gamma2=1;
//gamma3=0.1;

mesh3
Th=readmesh3(pth+"/mesh_sample.mesh");

fespace Vh(Th,P1);
Vh v,v1;
Vh u1,u2,cx,cy,cz;


    //medit(1,Th);
    //cout<<Vh.nt<<endl;


real[int] pot(Vh.ndof);
{
    ifstream file(fl);
    //file >> pot;
    for(int i=0;i<Vh.ndof;i++){
        file >> pot[i];
    }
};

//------------------------------------------------------------------------------------

v[]=pot;
real z0, Amp;
Amp=25;
z0=1.1148;
func f=Amp*(0.5*tanh(50*(z-z0))+0.5);

v1=f;

varf AA(u1,u2) =
int3d(Th)(0.5*gamma1*dz(u1)*dz(u2)+0.5*gamma2*dy(u1)*dy(u2)+0.5*gamma3*dx(u1)*dx(u2)+v*u1*u2+0*v1*u1*u2-sigma*u1*u2)+on(1,2,3,4,5,6,u1=0);			//Boundary condition

varf ouu([u1],[u2]) = int3d(Th)( u1*u2 );

//------------------------------------------------------------------------------------


//matrix<real> A = AA(Vh,Vh,solver=Crout,factorize=1);
//matrix<real> uu= ouu(Vh,Vh,solver=CG,eps=1e-20);
matrix<real> A = AA(Vh,Vh,solver=UMFPACK);
matrix<real> uu= ouu(Vh,Vh,solver=UMFPACK);

//set(A,solver=UMFPACK);
//set(uu,solver=UMFPACK);

//complex[int] ev(2*nev);
//complex[int,int] eV(A.n,2*nev);
//
//int k=EigenValue(A,uu,sigma=sigma,value=ev,rawvector=eV,tol=1e-45,maxit=10000,ncv=0);

real[int] ev(nev);
Vh[int] eV(nev);

int
k=EigenValue(A,uu,sym=true,sigma=sigma,value=ev,vector=eV,maxit=10000,ncv=0,
tol=0.0001);

// plot(eV[0]);
//-------------------------------------------------------------------------
//------------------------------saving-------------------------------------
//-------------------------------------------------------------------------

//for (int j=0;j<OP1.n/2;j++){
//cout << abs(eV(j,2)) << endl;
//}
//for (int j=OP1.n/2;j<OP1.n;j++){
//cout << abs(eV(j,2)) << endl;
//}

//for (int j=0;j<4*nev;j++){
////    cout << real(ev[j]) << endl;
//if (imag(ev[j])<0){
//cout << real(ev[j]) << "-" << abs(imag(ev[j])) << "j" << endl;
//}
//else{
//cout << real(ev[j]) << "+" << imag(ev[j]) << "j" << endl;
//}

// spectrum





//cout << "spectrum" << endl;
//
//for (int j2=0;j2<2*nev;j2++){
//    cout << ev[j2] << endl;
//}
//
//// wave functions
//cout << "wave_functions" << endl;
//
//int ne=2;
//Vh[int] coor(3);
//coor[0] = x;
//coor[1] = y;
//coor[2] = z;
//
//cout << Vh.ndof << " " << A.n << endl;
//for (int i=0; i<Vh.ndof; i++){
//cout<<coor[0][][i]<<" "<<coor[1][][i]<<" "<<coor[2][][i]<<" "<<abs(eV(i,ne))<< endl;
//}
//

cx=x;
cy=y;
cz=z;


if (gamma1!=1.0)
{
	fl=pth+"/v0/ff_"+jj+".dat";
	fl1=pth+"/v0/EE_"+jj+".dat";
	{ 
		ofstream ff(fl);
		ofstream fff(fl1);
		ofstream
        Ee1(pth+"/v0/E.dat",append);

		ff<<111 <<" "<< 111<<" "<<111<<" "<<111<<"\n";

		Ee1<<"0"<<" "<<"0"<<" "<<"0"<<" "<<alpha<<" ";

		for (int j2=0;j2<nev;j2++)
		{
			Ee1<<ev[j2]<<" ";
			fff<<ev[j2]<<"\n";
			u1=eV[j2];
			for (int i=0;i<Vh.ndof;i+=1)
			{
					ff<<cx[][i] <<" "<< cy[][i]<<" "<< cz[][i]<<" "<<u1[][i]<<"\n";
			}
			ff<<111 <<" "<<111 <<" "<< 111<<" "<<111<<"\n";
		}
		Ee1<<"\n";
	}
}
else if (gamma2!=1.0)
{
	fl=pth+"/v1/ff_"+jj+".dat";
	fl1=pth+"/v1/EE_"+jj+".dat";
	{ 
		ofstream ff(fl);
		ofstream fff(fl1);
		ofstream
        Ee1(pth+"/v1/E.dat",append);

		ff<<111 <<" "<< 111<<" "<<111<<" "<<111<<"\n";

		Ee1<<"0"<<" "<<"0"<<" "<<"0"<<" "<<alpha<<" ";

		for (int j2=0;j2<nev;j2++)
		{
			Ee1<<ev[j2]<<" ";
			fff<<ev[j2]<<"\n";
			u1=eV[j2];
			for (int i=0;i<Vh.ndof;i+=1)
			{
					ff<<cx[][i] <<" "<< cy[][i]<<" "<< cz[][i]<<" "<<u1[][i]<<"\n";
			}
			ff<<111 <<" "<<111 <<" "<< 111<<" "<<111<<"\n";
		}
		Ee1<<"\n";
	}
}
else
{
	fl=pth+"/v2/ff_"+jj+".dat";
	fl1=pth+"/v2/EE_"+jj+".dat";

	{ 
		ofstream ff(fl);
		ofstream fff(fl1);
		ofstream
        Ee1(pth+"/v2/E.dat",append);

		ff<<111 <<" "<< 111<<" "<<111<<" "<<111<<"\n";

		Ee1<<"0"<<" "<<"0"<<" "<<"0"<<" "<<alpha<<" ";

		for (int j2=0;j2<nev;j2++)
		{
			Ee1<<ev[j2]<<" ";
			fff<<ev[j2]<<"\n";
			u1=eV[j2];
			for (int i=0;i<Vh.ndof;i+=1)
			{
					ff<<cx[][i] <<" "<< cy[][i]<<" "<< cz[][i]<<" "<<u1[][i]<<"\n";
			}
			ff<<111 <<" "<<111 <<" "<<111<<" "<<111<<"\n";
		}
		Ee1<<"\n";
	}
}

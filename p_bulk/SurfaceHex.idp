load "medit"
load "msh3"
func mesh3 SurfaceHex(int[int] & N,real[int,int] &B ,int[int,int] & L,int orientation)
{

real eps=1;

real x0=B(0,0),x1=B(0,1);
real y0=B(1,0),y1=B(1,1);
real z0=B(2,0),z1=B(2,1);
int nx=N[0],ny=N[1],nz=N[2];
mesh Thx = square(ny,nz,[y0+(y1-y0)*x,z0+(z1-z0)*y]);
mesh Thy = square(nx,nz,[x0+(x1-x0)*x,z0+(z1-z0)*y]);
mesh Thz = square(nx,ny,[x0+(x1-x0)*x,y0+(y1-y0)*y]);

int[int] refx=[0,L(0,0)],refX=[0,L(0,1)];

int[int] refy=[0,L(1,0)],refY=[0,L(1,1)];

int[int] refz=[0,L(2,0)],refZ=[0,L(2,1)];

mesh3 Thx0 = movemesh23(Thx,transfo=[x0,x,y],orientation=-orientation,label=refx);
mesh3 Thx1 = movemesh23(Thx,transfo=[x1,x,y],orientation=+orientation,label=refX);
mesh3 Thy0 = movemesh23(Thy,transfo=[x,y0,y],orientation=+orientation,label=refy);
mesh3 Thy1 = movemesh23(Thy,transfo=[x,y1,y],orientation=-orientation,label=refY);
mesh3 Thz0 = movemesh23(Thz,transfo=[x,y,z0],orientation=-orientation,label=refz);
mesh3 Thz1 = movemesh23(Thz,transfo=[x,y,z1],orientation=+orientation,label=refZ);
mesh3 Th= Thx0+Thx1+Thy0+Thy1+Thz0+Thz1;
return Th;
}

